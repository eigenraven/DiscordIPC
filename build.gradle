plugins {
    id 'java'
    id 'signing'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = '0.6.0'
group = 'io.github.CDAGaming'
description = 'Connect locally to the Discord client using IPC for a subset of RPC features like Rich Presence and Activity Join/Spectate'
archivesBaseName = 'DiscordIPC'

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
    shadeOnly
    shade
    implementation.extendsFrom shade
}

repositories {
    mavenCentral()
}

dependencies {
    shade group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    shade group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    shade group: 'com.kohlschutter.junixsocket', name: 'junixsocket-common', version: '2.4.0'
    shade group: 'com.kohlschutter.junixsocket', name: 'junixsocket-native-common', version: '2.4.0'
}

jar.manifest.mainAttributes([
        'Implementation-Title'  : project.name,
        'Implementation-Version': project.version
])

shadowJar {
    configurations = [project.configurations.shade, project.configurations.shadeOnly]
    archiveClassifier.set('')
    exclude 'META-INF/versions/**'
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

assemble.dependsOn javadocJar, sourcesJar

[compileJava].each {
    it.options.encoding = 'UTF-8'
    it.options.deprecation = true
    it.options.fork = true
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact shadowJar
            artifact javadocJar
            artifact sourcesJar

            pom {
                name = archivesBaseName
                artifactId = archivesBaseName
                packaging = 'jar'
                description = project.description
                url = 'https://github.com/CDAGaming/DiscordIPC'

                scm {
                    connection = 'scm:git:git://github.com/CDAGaming/DiscordIPC.git'
                    developerConnection = 'scm:git:ssh://github.com/CDAGaming/DiscordIPC.git'
                    url = 'https://github.com/CDAGaming/DiscordIPC'
                }
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://github.com/CDAGaming/DiscordIPC/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'cdagaming'
                        name = 'CDAGaming'
                        email = 'cstack2011@yahoo.com'
                    }
                    developer {
                        id = 'jagrosh'
                        name = 'John Grosh'
                        email = 'j@gro.sh'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = System.getenv("OSSRH_USERNAME") // echo %OSSRH_USERNAME% / Create a system environment variable with your sonatype login username
                password = System.getenv("OSSRH_PASSWORD") // echo %OSSRH_PASSWORD% / Create a system environment variable with your sonatype login password
            }

            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('-SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}
